///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SCO_Test.Recording_Modules.AssitanceRecordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The test_closeLane recording.
    /// </summary>
    [TestModule("21d31f69-cd83-42cb-b47a-fc06f39f175d", ModuleType.Recording, 1)]
    public partial class test_closeLane : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::SCO_Test.SCO_TestRepository repository.
        /// </summary>
        public static global::SCO_Test.SCO_TestRepository repo = global::SCO_Test.SCO_TestRepository.Instance;

        static test_closeLane instance = new test_closeLane();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public test_closeLane()
        {
            NewVariable = "5s";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static test_closeLane Instance
        {
            get { return instance; }
        }

#region Variables

        string _NewVariable;

        /// <summary>
        /// Gets or sets the value of variable NewVariable.
        /// </summary>
        [TestVariable("466eb8db-4830-478a-9b97-f19876437927")]
        public string NewVariable
        {
            get { return _NewVariable; }
            set { _NewVariable = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NCRNEXTGENUI2.AssistanceButton' at Center.", repo.NCRNEXTGENUI2.AssistanceButtonInfo, new RecordItemIndex(0));
            repo.NCRNEXTGENUI2.AssistanceButton.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(1));
            Delay.Duration(300, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NCRNEXTGENUI2.SomeContainer.StoreLogIn1' at Center.", repo.NCRNEXTGENUI2.SomeContainer.StoreLogIn1Info, new RecordItemIndex(2));
            repo.NCRNEXTGENUI2.SomeContainer.StoreLogIn1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(3));
            Delay.Duration(300, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NCRNEXTGENUI2.SomeContainer.Keypad9' at Center.", repo.NCRNEXTGENUI2.SomeContainer.Keypad9Info, new RecordItemIndex(4));
            repo.NCRNEXTGENUI2.SomeContainer.Keypad9.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(5));
            Delay.Duration(300, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NCRNEXTGENUI2.SomeContainer.TextOK' at Center.", repo.NCRNEXTGENUI2.SomeContainer.TextOKInfo, new RecordItemIndex(6));
            repo.NCRNEXTGENUI2.SomeContainer.TextOK.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(7));
            Delay.Duration(300, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NCRNEXTGENUI2.SomeContainer.Keypad9' at Center.", repo.NCRNEXTGENUI2.SomeContainer.Keypad9Info, new RecordItemIndex(8));
            repo.NCRNEXTGENUI2.SomeContainer.Keypad9.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(9));
            Delay.Duration(300, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NCRNEXTGENUI2.SomeContainer.TextOK' at Center.", repo.NCRNEXTGENUI2.SomeContainer.TextOKInfo, new RecordItemIndex(10));
            repo.NCRNEXTGENUI2.SomeContainer.TextOK.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(11));
            Delay.Duration(300, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NCRNEXTGENUI2.CloseLane' at Center.", repo.NCRNEXTGENUI2.CloseLaneInfo, new RecordItemIndex(12));
            repo.NCRNEXTGENUI2.CloseLane.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(13));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Lane Closed') on item 'NCRNEXTGENUI2.SomeContainer.Instructions'.", repo.NCRNEXTGENUI2.SomeContainer.InstructionsInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.NCRNEXTGENUI2.SomeContainer.InstructionsInfo, "Text", "Lane Closed");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'NCRNEXTGENUI2.SomeContainer.LaneImage'.", repo.NCRNEXTGENUI2.SomeContainer.LaneImageInfo, new RecordItemIndex(15));
            Validate.Exists(repo.NCRNEXTGENUI2.SomeContainer.LaneImageInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NCRNEXTGENUI2.SomeContainer.StoreLogIn' at Center.", repo.NCRNEXTGENUI2.SomeContainer.StoreLogInInfo, new RecordItemIndex(16));
            repo.NCRNEXTGENUI2.SomeContainer.StoreLogIn.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(17));
            Delay.Duration(300, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NCRNEXTGENUI2.SomeContainer.Text9' at Center.", repo.NCRNEXTGENUI2.SomeContainer.Text9Info, new RecordItemIndex(18));
            repo.NCRNEXTGENUI2.SomeContainer.Text9.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(19));
            Delay.Duration(300, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NCRNEXTGENUI2.SomeContainer.TextOK' at Center.", repo.NCRNEXTGENUI2.SomeContainer.TextOKInfo, new RecordItemIndex(20));
            repo.NCRNEXTGENUI2.SomeContainer.TextOK.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(21));
            Delay.Duration(300, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NCRNEXTGENUI2.SomeContainer.Text9' at Center.", repo.NCRNEXTGENUI2.SomeContainer.Text9Info, new RecordItemIndex(22));
            repo.NCRNEXTGENUI2.SomeContainer.Text9.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(23));
            Delay.Duration(300, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NCRNEXTGENUI2.SomeContainer.TextOK' at Center.", repo.NCRNEXTGENUI2.SomeContainer.TextOKInfo, new RecordItemIndex(24));
            repo.NCRNEXTGENUI2.SomeContainer.TextOK.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(25));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Press Here or           Scan Item') on item 'NCRNEXTGENUI2.PressHereOrScanItem'.", repo.NCRNEXTGENUI2.PressHereOrScanItemInfo, new RecordItemIndex(26));
            Validate.AttributeEqual(repo.NCRNEXTGENUI2.PressHereOrScanItemInfo, "Text", "Press Here or           Scan Item");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
