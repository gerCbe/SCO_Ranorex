///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SCO_Test.Recording_Modules.AssitanceRecordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The test_approvalNeededYes recording.
    /// </summary>
    [TestModule("a4374f3c-8805-4b59-80b8-07689a9e6bc8", ModuleType.Recording, 1)]
    public partial class Test_approvalNeededYes : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::SCO_Test.SCO_TestRepository repository.
        /// </summary>
        public static global::SCO_Test.SCO_TestRepository repo = global::SCO_Test.SCO_TestRepository.Instance;

        static Test_approvalNeededYes instance = new Test_approvalNeededYes();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Test_approvalNeededYes()
        {
            NewVariable = "1.1m";
            N1_1m = "1.1m";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Test_approvalNeededYes Instance
        {
            get { return instance; }
        }

#region Variables

        string _NewVariable;

        /// <summary>
        /// Gets or sets the value of variable NewVariable.
        /// </summary>
        [TestVariable("552cfa6d-9a65-4dcd-8e83-18ab5d025f9b")]
        public string NewVariable
        {
            get { return _NewVariable; }
            set { _NewVariable = value; }
        }

        string _N1_1m;

        /// <summary>
        /// Gets or sets the value of variable N1_1m.
        /// </summary>
        [TestVariable("4b744e4c-bac0-4ef2-a58c-76fa2789793d")]
        public string N1_1m
        {
            get { return _N1_1m; }
            set { _N1_1m = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NCRNEXTGENUI2.InstructionBox' at Center.", repo.NCRNEXTGENUI2.InstructionBoxInfo, new RecordItemIndex(0));
            repo.NCRNEXTGENUI2.InstructionBox.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for time from variable $N1_1m.", new RecordItemIndex(1));
            Delay.Duration(Duration.Parse(N1_1m), false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='Would you like to continue with your purchase?') on item 'NCRNEXTGENUI2.SomeContainer.Instructions'.", repo.NCRNEXTGENUI2.SomeContainer.InstructionsInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.NCRNEXTGENUI2.SomeContainer.InstructionsInfo, "Text", "Would you like to continue with your purchase?");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NCRNEXTGENUI2.SomeContainer.TextYes' at Center.", repo.NCRNEXTGENUI2.SomeContainer.TextYesInfo, new RecordItemIndex(3));
            repo.NCRNEXTGENUI2.SomeContainer.TextYes.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'NCRNEXTGENUI2.EditCartBtn' at Center.", repo.NCRNEXTGENUI2.EditCartBtnInfo, new RecordItemIndex(4));
            repo.NCRNEXTGENUI2.EditCartBtn.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
